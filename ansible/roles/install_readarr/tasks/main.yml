- name: Install prerequisites for Readarr
  ansible.builtin.apt:
    name:
      - curl
      - libmono-cil-dev
      - mediainfo
      - sqlite3
      - unzip
    update_cache: true
    state: present

- name: Ensure /var/lib/readarr directory exists
  ansible.builtin.file:
    path: /var/lib/readarr
    state: directory
    mode: '775'

- name: Download and extract Readarr
  ansible.builtin.get_url:
    url: "https://github.com/Readarr/Readarr/releases/download/v0.3.32.2587/Readarr.develop.0.3.32.2587.linux-core-x64.tar.gz"
    dest: /opt/readarr.tar.gz
    mode: '775'

- name: Extract Readarr
  ansible.builtin.unarchive:
    src: /opt/readarr.tar.gz
    dest: /opt/
    remote_src: true
    mode: '775'

- name: Ensure user and group has correct rights over extracted files
  ansible.builtin.file:
    path: /opt/Readarr
    mode: '775'
    recurse: true

- name: Clean up the downloaded tarball
  ansible.builtin.file:
    path: /opt/readarr.tar.gz
    state: absent

- name: Create Readarr service
  ansible.builtin.copy:
    dest: /etc/systemd/system/readarr.service
    mode: '644'
    content: |
      [Unit]
      Description=Readarr Daemon
      After=syslog.target network.target

      [Service]
      UMask=0002
      Type=simple
      ExecStart=/opt/Readarr/Readarr -nobrowser -data=/var/lib/readarr/
      TimeoutStopSec=20
      KillMode=process
      Restart=on-failure
      LimitNOFILE=32768

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd and enable Readarr service
  ansible.builtin.systemd:
    daemon_reload: true
    name: readarr
    enabled: true
    state: started

- name: Restart Readarr to apply configuration
  ansible.builtin.systemd:
    name: readarr
    state: restarted

- name: Cleaning up unused and unnecessary package files
  ansible.builtin.apt:
    autoremove: true
    autoclean: true
