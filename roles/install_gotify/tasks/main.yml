- name: Install prerequisites for Gotify
  ansible.builtin.apt:
    name:
      - curl
      - sudo
      - unzip
    state: present
    update_cache: true

- name: Ensure /opt/gotify directory exists
  ansible.builtin.file:
    path: /opt/gotify
    state: directory
    mode: '775'

- name: Create Gotify installation directory
  ansible.builtin.file:
    path: /opt/gotify
    state: directory
    mode: '775'

- name: Download Gotify zip archive
  ansible.builtin.get_url:
    url: https://github.com/gotify/server/releases/latest/download/gotify-linux-amd64.zip
    dest: /opt/gotify/gotify-linux-amd64.zip
    mode: '775'

- name: Unzip Gotify archive
  ansible.builtin.unarchive:
    src: /opt/gotify/gotify-linux-amd64.zip
    dest: /opt/gotify
    remote_src: true
    mode: '775'

- name: Remove Gotify zip archive
  ansible.builtin.file:
    path: /opt/gotify/gotify-linux-amd64.zip
    state: absent

- name: Make Gotify binary executable
  ansible.builtin.file:
    path: /opt/gotify/gotify-linux-amd64
    mode: '775'

- name: Ensure user and group has correct rights over extracted files
  ansible.builtin.file:
    path: /opt/gotify
    mode: '775'
    recurse: true

- name: Create systemd service for Gotify
  ansible.builtin.copy:
    dest: /etc/systemd/system/gotify.service
    mode: '644'
    content: |
      [Unit]
      Description=Gotify Daemon
      Requires=network.target
      After=network.target

      [Service]
      Type=simple
      User=root
      WorkingDirectory=/opt/gotify
      ExecStart=/opt/gotify/./gotify-linux-amd64
      Restart=always
      RestartSec=3

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd to apply changes
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start Gotify service
  ansible.builtin.systemd:
    name: gotify
    enabled: true
    state: started

- name: Cleaning up unused and unnecessary package files
  ansible.builtin.apt:
    autoremove: true
    autoclean: true
